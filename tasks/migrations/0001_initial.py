# Generated by Django 5.1.5 on 2025-01-25 15:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('full_name', models.CharField(help_text='Иванов И.И.', max_length=100, verbose_name='ФИО')),
                ('position', models.CharField(max_length=100, verbose_name='Должность')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Структурное подразделение')),
                ('vacation_status', models.BooleanField(default=False, verbose_name='Статус отсутствия на рабочем месте')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник')),
                ('groups', models.ManyToManyField(blank=True, related_name='manager_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='manager_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Менеджер',
                'verbose_name_plural': 'Менеджеры',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('full_name', models.CharField(blank=True, help_text='Иванов И.И.', max_length=100, null=True, verbose_name='ФИО')),
                ('department', models.CharField(blank=True, help_text='отдел, гпх, самозанятый, ИП, юр.лицо', max_length=100, null=True, verbose_name='Структурное подразделение')),
                ('phone', models.CharField(blank=True, max_length=35, null=True, verbose_name='Телефон')),
                ('vacation_status', models.BooleanField(blank=True, default=False, null=True, verbose_name='Статус отсутствия на рабочем месте')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Сотрудник')),
                ('groups', models.ManyToManyField(blank=True, related_name='employee_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='employee_user_permissions', to='auth.permission')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='tasks.manager', verbose_name='Менеджер')),
            ],
            options={
                'verbose_name': 'Исполнитель',
                'verbose_name_plural': 'Исполнители',
            },
        ),
        migrations.CreateModel(
            name='ParentTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название главной задачи')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('planned_end_date', models.DateField(verbose_name='Плановый срок выполнения')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание задачи')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_tasks', to='tasks.manager', verbose_name='Менеджер')),
            ],
            options={
                'verbose_name': 'Главная задача',
                'verbose_name_plural': 'Главные задачи',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название задачи')),
                ('limit_time', models.CharField(max_length=20, verbose_name='Срок выполнения задачи')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('status', models.CharField(choices=[('done', 'Выполнено'), ('in_progress', 'В процессе выполнения'), ('not_started', 'Не приступал к выполнению')], default='not_started', max_length=20, verbose_name='Статус')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Комментарии к задаче')),
                ('is_active', models.BooleanField(default=True, verbose_name='Признак активности задачи')),
                ('is_important', models.BooleanField(default=False, verbose_name='Признак важности задачи')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasks.employee', verbose_name='Иcполнитель')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to='tasks.manager', verbose_name='Создатель задачи')),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasks.parenttask', verbose_name='Главная задача')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['-start_date'],
            },
        ),
    ]
